{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e2e73b4.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCH4clzIl7WhVrWNnzZ6FgFcOo9gusXGD8\",\r\n    authDomain: \"adda-app-clone.firebaseapp.com\",\r\n    projectId: \"adda-app-clone\",\r\n    storageBucket: \"adda-app-clone.appspot.com\",\r\n    messagingSenderId: \"1067161578442\",\r\n    appId: \"1:1067161578442:web:5c2dfa886cbc0e494a7d33\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider(); \r\n\r\nexport{ auth, provider };\r\nexport default db;\r\n","import React,{ useEffect , useState} from 'react';\r\n\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nimport './SidebarChat.css';\r\n\r\nimport db from \"./firebase\"\r\nimport { Link } from 'react-router-dom';\r\n \r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n         if(id){\r\n             db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot => (\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n             )) \r\n         }\r\n    },[id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    }, [])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat room\");\r\n        \r\n        if(roomName){\r\n            //do some clever database stuff...\r\n            db.collection(\"rooms\").add({\r\n                name:roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className='sidebarChat'>\r\n                <Avatar src={`https://avatars.dicebear.com/4.5/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        \r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {createContext, useContext,useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider =({\r\n    reducer,initialState, children}) => (\r\n        <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n            {children}\r\n        </StateContext.Provider>\r\n\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useEffect, useState } from 'react';\r\nimport db from \"./firebase\";\r\n\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport './Sidebar.css';\r\nimport SidebarChat from \"./SidebarChat\"\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar(){\r\n\r\n    const [rooms,setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        // const unsubscribe=\r\n        db.collection(\"rooms\").onSnapshot((snapshot)=> (\r\n                setRooms(snapshot.docs.map((doc) =>\r\n                   ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                   }) \r\n                   ))\r\n            ));\r\n        // return() =>{\r\n        //     unsubscribe();\r\n        // };\r\n    },[]);\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>                    \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                <SearchOutlinedIcon/>\r\n                <input placeholder=\"Search or start new chat\" type=\"text\"/>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room =>(\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar","import React,{ useEffect , useState} from 'react'\r\n\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\n\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport \"./Chat.css\"\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Chat() {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] =useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [ roomName, setRoomName ]= useState(\"\");\r\n    const [messages, setMessages] =useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection(\"rooms\")\r\n                .doc(roomId)\r\n                .onSnapshot((snapshot) => setRoomName\r\n                (snapshot.data().name));\r\n            \r\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy( \"timestamp\",\"asc\").onSnapshot(snapshot=>(\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            ))\r\n        }\r\n    },[roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    }, [roomId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"You typed input >>>>\",input);\r\n\r\n        db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n            message:input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(), \r\n        })\r\n\r\n        setInput(\"\");\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/4.5/api/human/${seed}.svg`}/>\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>\r\n                        last seen{\"\"}\r\n                        {\r\n                            new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlinedIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFileIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>                   \r\n                </div>\r\n            </div>\r\n            <div className=\"chat_body\">\r\n                {messages.map(message =>(\r\n                    <p className={`chat_message ${message.name === user.displayName && \"chat_receiver\"}`}>\r\n                    <span className=\"chat_name\">\r\n                        {message.name}\r\n                    </span>\r\n                    {message.message}\r\n                    <span className=\"chat_timestamp\">\r\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                    </p>\r\n                ))}               \r\n            </div>\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticonIcon/>\r\n                <form>\r\n                    <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\"/>\r\n                    <button onClick={sendMessage}type=\"submit\">Send a message</button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState ={\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state,action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React,{ useState } from 'react';\r\nimport \"./Login.css\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { auth, provider } from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\n\r\nfunction Login() {\r\n    const [{},dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then((result) =>\r\n            {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                });\r\n            })\r\n            .catch((error)=> alert(error.message));\r\n    };\r\n    return(\r\n    <div className=\"login\">\r\n        <div className=\"login_container\">\r\n            <img\r\n                src=\"https://api.iconify.design/simple-icons:whatsapp.svg?height=200\"\r\n                alt=\"\"\r\n            />\r\n            <div className=\"login_text\">\r\n                <h1>Sign in to Adda App</h1>\r\n            </div>\r\n\r\n            <Button onClick={signIn}>\r\n                Sign In With Google\r\n            </Button>\r\n        </div>      \r\n    </div>\r\n    \r\n    \r\n    )        \r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport {BrowserRouter as Router, Switch, Route}from 'react-router-dom';\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{user},dispatch]= useStateValue(); \n  return (\n    //BEM naming convention\n    <div className=\"app\">\n      {!user ? (\n        <Login/>\n      ):(\n          <div className=\"app_body\"> \n            <Router>\n              <Sidebar/>\n              <Switch>  \n                <Route path=\"/rooms/:roomId\">              \n                    <Chat />\n                </Route>\n                <Route path=\"/\">\n                    <Chat />\n                </Route>            \n              </Switch>\n            </Router>     \n          </div>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import * as serviceworker from \"./serviceWorker\";\nimport reducer,{initialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}\n    reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}